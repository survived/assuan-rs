name: Rust

on: 
  pull_request:
    branches: [ "*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Build
      run: cargo build --all
  build-pinentry-tty:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - features: ""
        - features: "server"
        - features: "termion"
        - features: "server,termion"
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Build
      run: cargo build --no-default-features --features "${{ matrix.features }}"
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Run tests
      run: cargo test
  check-fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Check formatting
      run: cargo fmt --all -- --check
  check-doc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Check docs
      run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps
  check-clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      with:
        cache-on-failure: "true"
    - name: Run clippy
      run: cargo clippy -- -D clippy::all
